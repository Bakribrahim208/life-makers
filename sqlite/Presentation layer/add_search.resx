<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABDRJREFUeF7lm8urjV8Yx0/uFAaKCSmJMjWQAZJIGSi5hyQhJQMpAwb+BJlQiigx
        YsZQbhED90TJTCkJ5X77fk/O7nm/Z+291mqv9eyDT336aT3v8zxrr7Pfy157//rAryHmN7gauhGaRK/l
        IqyBLoQmMBTkIqyF1dHG353V/laXRdCm3mh/XZTqi2CbUW9sb774dX/+Gxqvgm1EvbG9+UJJu0VYD4tj
        m1BvbO+BBSBui2AbUG9sb7sApN0ibIDFsMWpN7a3LgBptwgbYRFsYeqN7R1aAFJ1EWxR6o3t3W4BSLtF
        6BpbkHqj/XPtmuIFM9H+uXZN8YKZaP9cu6Z4wUx4HudYfL7FC1am+HyLF6xM8fkWL1iZ4vMtXrAyxedb
        vGBlis+3eMHKFJ9v8YKVKT7f4gUrU3y+sYIa91aJxbOJFdS4t0osnk2soMa9VWLxbGIFNe6tEotnU7xg
        YWbBvfA8fAh1vvfgWbgbzoDZaMGhwAi4Bd6BOr+YNyF3jofDJLRAr1kBn0OdV65P4DIYRRN7xTh4Eup8
        uvU4HAPbogmKxnvhe3gB7ocr4cI/8t8cuwg/wFAuvQUnwyB6sKJxT5/CrXAsjMF30Db4DIZqPYbBRdAD
        FY17+Bnug7wY5jISHoBfoda9DQedDnqQovHavoJzYbfMg6+h1j8GG+gBXvBqr7354mfCTmhOJ2bD0CIs
        hS006AHf2nqr49s+5S9vc2iM+VBPh0ew9ZxgA9SDzVD78pxPQfNSOAg1j1+19aMBD3hbsj15tU+94Nk8
        msIo+ALavOuwHztIFY3XkLe6VDQ3lV3Q5v2E02FjkCoaLy0fclLu8wNofioT4Edoc3fCxgBVNF5aPuHl
        oPk5XII29wxsDFBF46Xlo2wOmp+DXgzvwsYArc07aPvxed5iYyW08Oe3NsZnhMYArQ0vPrYfP9RYbKyE
        liXQxr7AxgCtzQ9o+/13C/AW2n6epwB/cmtjPTkFdF/P8yJ4CNpcbrk1BmhtzkHbj5sZOdhcmsNlaHNP
        w8YArc0eaPtxJ4ebGanYXJrKRPgJ2twdsDFAa8OPu9qTOzmpaG4q3Da3ebwbTYONQeqBfhjiNhZ3clKw
        eTQF7gK9hDbvKuzHDlIPNkHty22sFDQvhcNQ81r/Y5YGPOBmBD8C277ctOA2VgybQ2MsgPrzuvtwGOzH
        BqgXy6H25n2Z21id0JxOzIFvoD2e5/5i2MIGqScnoPbnInAbq1v4l9cXT4/CBnqAJ9wHCH3/x9OBn9y4
        k5MLL3g850O/Kr0BB9XUg7zhlxV6PRiQ21jcyRkPY/A+z1udXu0H5Hk/CQ5CD+wFU2Cnb4K5k8PNDL4r
        +JGWH2oon+35eMsnPH3IsV6DwRdPQgn/irzgHYGjYVtCif+CD+AiGCWU/LfKv/gVuAq27vMxQoX+Jnnt
        OAW3w6kwg76+3y/hNfsXNctBAAAAAElFTkSuQmCC
</value>
  </data>
</root>